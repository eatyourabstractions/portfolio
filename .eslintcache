[{"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Sidebar.js":"1","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/TweetTextArea.js":"2","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/ScaleIn.js":"3","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Bookmarks.js":"4","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/index.js":"5","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/PoppingCircle.js":"6","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/index.js":"7","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/HomeFeed.js":"8","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/CurrentUserContext.js":"9","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Tweet.js":"10","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/TweetDetails.js":"11","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/TwitterClone.js":"12","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Profile.js":"13","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/Heart.js":"14","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Notifications.js":"15","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/components/Main.js":"16","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/utils.js":"17","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Sudoku.tsx":"18","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/App.js":"19","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Grid.tsx":"20","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Timer.tsx":"21","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/MyTable.tsx":"22","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/Main.tsx":"23","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/GlobalContext.tsx":"24","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/KittyGame/NyanCatsGame.js":"25","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/ChainsAdmin.tsx":"26","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/constants.js":"27","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/App.jsx":"28"},{"size":2139,"mtime":1612656094553,"results":"29","hashOfConfig":"30"},{"size":1593,"mtime":1605295797483,"results":"31","hashOfConfig":"30"},{"size":443,"mtime":1604950205407,"results":"32","hashOfConfig":"30"},{"size":132,"mtime":1605030615567,"results":"33","hashOfConfig":"30"},{"size":787,"mtime":1605321198817,"results":"34","hashOfConfig":"35"},{"size":645,"mtime":1604949021598,"results":"36","hashOfConfig":"30"},{"size":749,"mtime":1612637431296,"results":"37","hashOfConfig":"30"},{"size":4464,"mtime":1612657166038,"results":"38","hashOfConfig":"30"},{"size":916,"mtime":1605038535056,"results":"39","hashOfConfig":"30"},{"size":2599,"mtime":1605325484519,"results":"40","hashOfConfig":"30"},{"size":141,"mtime":1605030654422,"results":"41","hashOfConfig":"30"},{"size":278,"mtime":1611279556570,"results":"42","hashOfConfig":"30"},{"size":143,"mtime":1605030251364,"results":"43","hashOfConfig":"30"},{"size":1141,"mtime":1604946043533,"results":"44","hashOfConfig":"30"},{"size":144,"mtime":1605030641020,"results":"45","hashOfConfig":"30"},{"size":3654,"mtime":1613252762470,"results":"46","hashOfConfig":"30"},{"size":10009,"mtime":1612062732820,"results":"47","hashOfConfig":"30"},{"size":455,"mtime":1612644585753,"results":"48","hashOfConfig":"30"},{"size":1497,"mtime":1612656927281,"results":"49","hashOfConfig":"30"},{"size":8802,"mtime":1612408662773,"results":"50","hashOfConfig":"30"},{"size":2370,"mtime":1612408325723,"results":"51","hashOfConfig":"30"},{"size":4267,"mtime":1608689915081,"results":"52","hashOfConfig":"30"},{"size":3962,"mtime":1608689915090,"results":"53","hashOfConfig":"30"},{"size":719,"mtime":1608512397146,"results":"54","hashOfConfig":"30"},{"size":595,"mtime":1612663008958,"results":"55","hashOfConfig":"30"},{"size":424,"mtime":1608608680448,"results":"56","hashOfConfig":"30"},{"size":164,"mtime":1605035100766,"results":"57","hashOfConfig":"30"},{"size":527,"mtime":1608689915091,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"1uahy97",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"zyg8p7",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Sidebar.js",["135","136","137","138"],"import React from \"react\";\nimport styled from 'styled-components';\nimport {\n    BrowserRouter as Router,\n    Link,\n    NavLink,\n    useRouteMatch\n  } from \"react-router-dom\";\n\nimport {COLORS} from '../constants';\nimport {ReactComponent as Logo} from '../assets/logo.svg';\n\nimport {AiOutlineHome as Home} from 'react-icons/ai';\nimport {RiNotification2Line as Bell} from 'react-icons/ri';\nimport {BsPerson as Person} from 'react-icons/bs';\nimport {BsBookmark as Bookmark} from 'react-icons/bs';\nimport {AiOutlineRetweet as Tweet} from 'react-icons/ai';\n\n\n\nconst NavigationLink = styled(NavLink)`\n  /* default styles here */\n  margin-left: 10px;\n  text-decoration: none;\n\n  &:visited{\n    color: none;\n  }\n\n  &.active {\n    color: ${COLORS.primary};\n  }\n  &:hover{\n    background: ${COLORS.electric};\n    border-radius: 30px;\n    opacity: 0.1;\n    padding: 15px\n  }\n`;\n\nconst Li = styled.li`\n  padding: 10px;\n`;\n\n\n\n\nconst Ul = styled.ul`\n  list-style: none;\n`;\n \n const Sidebar = () => {\n\n  let { path, url } = useRouteMatch();\n    return (\n     \n         <div>\n          \n          <nav>\n            <Ul>\n              <Li>\n              <Logo/>\n              </Li>\n              <Li>\n                <Home size='25px'/>\n                <NavigationLink to={`${url}/twitter-clone-home`}><b>Home</b></NavigationLink>\n              </Li>\n              <Li>\n                <Bell size='25px'/>\n                <NavigationLink to={`{url}/notifications`}><b>notifications</b></NavigationLink>\n              </Li>\n              <Li>\n                <Bookmark size='25px'/>\n                <NavigationLink to={`${url}/notifications`}><b>bookmarks</b></NavigationLink>\n              </Li>\n              {/* <Li>\n                <Tweet size='25px'/>\n                <NavigationLink to=\"/tweet/:tweetId\"><b>tweetId</b>tweetId</NavigationLink>\n              </Li> */}\n              <Li>\n              <Person size='25px'/>\n                <NavigationLink to={`${url}/:profileId`}><b>profile</b></NavigationLink>\n              </Li>\n            </Ul>\n          </nav>\n        \n        </div>\n    )\n        \n      \n      \n    \n  }\n\nexport default Sidebar;",["139","140"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/TweetTextArea.js",["141"],"import React from \"react\";\nimport styled from 'styled-components';\n\nimport {COLORS} from '../constants';\nconst TweetLayout = styled.div`\n  display: flex;\n  margin-left: 40px;\n  margin-bottom: 50px;\n  flex-direction: column;\n \n`;\nconst Avatar = styled.img`\n  height: 75px;\n  width: 75px;\n  border-radius: 50%;\n`;\n\nconst Textarea = styled.textarea`\n  border: 0px;\n`;\n\nconst MeowBtn = styled.button`\n  background-color: ${COLORS.primary};\n  color: whitesmoke;\n  border: none;\n  border-radius: 30px;\n  width: 120px;\n  height: 45px;\n  font-size: 26px;\n  \n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-self: flex-end;\n  margin-right: 60px;\n  margin-top: 15px;\n`;\n\n\nconst TweetTextArea = ({avatar, makeTweet}) => {\n  const limit = 240;\n  const [content, setContent] = React.useState('');\n  const setFormattedContent = text => {\n    text.length > limit ? setContent(text.slice(0, limit)) : setContent(text);\n  };\n  React.useEffect(() => {\n    setFormattedContent(content);\n  }, []);\n\n  \n  return (\n    <>\n    <TweetLayout>\n      <FlexContainer >\n      <Avatar src={avatar}/>\n      <Textarea placeholder={`What's happening?`} \n          value={content}\n          rows=\"6\" cols='120' \n          onChange={event => setFormattedContent(event.target.value)}>\n      </Textarea>\n      </FlexContainer>\n      <FlexContainer>\n      <p style={{marginRight: '15px'}}>\n        {content.length}/{limit}\n      </p>\n      <MeowBtn onClick={() => makeTweet(content)}>Meow</MeowBtn>\n      </FlexContainer>\n    </TweetLayout>\n    \n    <hr width='1000px'/>\n    </>\n);\n  };\n\nexport default TweetTextArea;",["142","143"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/ScaleIn.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Bookmarks.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/index.js",[],["144","145"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/PoppingCircle.js",["146"],"import React, {useContext} from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\n\nconst PoppingCircle = ({ size, color }) => {\n    return <Wrapper style={{\n        width: size,\n        height: size,\n        backgroundColor: color,\n    }}></Wrapper>\n    \n  };\n\n  const fadeIn = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0 ;\n  }\n`;\n\nconst scale = keyframes`\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1) ;\n  }\n`;\n\nconst Wrapper = styled.div`\n    position: absolute;\n    border-radius: 50%;\n    animation: ${fadeIn} 500ms forwards, ${scale} 300ms forwards;\n`;\n\n\n  export default PoppingCircle;","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/index.js",["147","148"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\n// import './index.css';\n// import App from './App';\nimport TwitterClone from './apps/TwitterClone/src/TwitterClone'\nimport Main from './components/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// TODO 1: Make the main component which will contain the react-Router\n// TODO (1 CONT): and make the twitter clone function with child routes","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/HomeFeed.js",["149","150"],"import React,{useEffect, useState} from \"react\";\nimport styled from 'styled-components';\n\nimport Tweet from './Tweet';\n\nimport moment from 'moment';\n\nimport TweetTextArea from './TweetTextArea'\n\nconst Ul = styled.ul`\n  list-style-type: none;\n`;\n\nconst HomeFeed = () => {\n  const [tweetIds, setTweetIds] = useState([])\n  const [tweetsByIds, setTweetsByIds] = useState(false)\n  const [theAvatar, setAvatar] = useState('')\n  const [profile, setProfile] = useState({})\n  \n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch('api/me/home-feed')\n        .then(response => response.json())\n        .then(data => {\n          \n            setTweetIds(data.tweetIds)\n            setTweetsByIds(data.tweetsById)\n        });\n\n        fetch('api/me/profile')\n        .then(response => response.json())\n        .then(data => {\n            setAvatar(validateUrl(data.profile.avatarSrc))\n            setProfile(data.profile)\n            \n            \n        });\n\n}, []);\n\n\n\nconst ranId = (n) => [...Array(n)].map(() => Math.floor(Math.random() * 9)).join('');\n\n  const postTweet = async (cntnt) =>{\n    fetch('api/tweet', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({status: cntnt})\n      })\n      .then(res => refreshPage())\n      // .then(res => res.json())\n      // .then(res => {\n        \n      //   const myNewTweet = {\n      //     timestamp: res.tweet.timestamp,\n      //     author: {\n      //       displayName: profile.displayName,\n      //       handle: profile.handle,\n      //       avatarSrc:validateUrl( profile.avatarSrc)\n      //     },\n      //     status: res.tweet.status,\n      //     media: [],\n      //     isLiked: false,\n      //     id: res.tweet.id,\n      //   }\n      //   // myNewTweet[res.tweet.id] = res.tweet.id\n      //    console.log(tweetsByIds)\n      //    const newTweets = [...tweetIds]\n      //    newTweets.unshift(`${res.tweet.id}`)\n      //    setTweetIds(newTweets)\n      //    const newObj = Object.assign({}, tweetsByIds);\n      //   newObj[res.tweet.id] = myNewTweet;\n      //   console.log('my new obj', newObj)\n      //    setTweetsByIds(newObj)\n      // })\n      \n  }\n  \n\n  // const throwTweet = async (tweetContent) =>{\n  //   // optimistic update\n  //   const newId = ranId(12)\n  //   const newTweetById = {\n  //    timestamp: moment().format(),\n  //    status: tweetContent,\n  //    author: {\n  //     displayName: profile.displayName,\n  //     handle: profile.handle,\n  //     avatarSrc: profile.avatarSrc,\n  //   },\n  //    media: []}\n  //    newTweetById[newId] = newId;\n  //    const newTweets = [...tweetIds]\n  //    newTweets.unshift(newId)\n  //    //setTweetIds(newTweets)\n  //    const newObj = Object.assign({}, tweetsByIds);\n  //    newObj[newId] = newTweetById;\n  //    //setTweetsByIds(newObj)\n     \n  //    //POST the data\n  //   postTweet(tweetContent)\n  //   refreshPage()\n\n     \n  // }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  \n\n  \n  \nconst TweetLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 80px;\n`;\n\n  const validateUrl = (myurl) =>{\n    return myurl.includes('http') ? myurl :`http://localhost:31415${myurl}`\n  }\n\n    const genTweetList = () => tweetIds.map((tweetId) =>{\n      const {timestamp, author, status, media, retweetFrom, id, isLiked} = tweetsByIds[tweetId];\n      const myAvatar = validateUrl(author.avatarSrc)\n      \n      \n      const gotMedia = Array.isArray(media) && media.length;\n      const tweetPhotoTemp = gotMedia ? media[0].url : '';\n      const tweetPhoto = tweetPhotoTemp.length === 0 ? '' : validateUrl(tweetPhotoTemp);\n      \n      return (\n        <li key={tweetId}>\n            <Tweet \n               displayName={author.displayName}\n               handle={author.handle}\n               date={moment(timestamp).format('MMM Do')}\n               avatar={myAvatar}\n               photo={tweetPhoto}\n               message={status}\n               remowed={retweetFrom?.displayName}\n               id={id}\n               likedOrNot={isLiked}\n               \n               />\n        </li>\n          )\n        }\n    );\n\n    \n\n    return (\n    <TweetLayout>\n      <TweetTextArea avatar={theAvatar} makeTweet={postTweet}/>\n      <Ul>{ tweetsByIds && genTweetList()}</Ul>\n    </TweetLayout>\n    );\n  };\n\nexport default HomeFeed;","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/CurrentUserContext.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Tweet.js",["151","152","153"],"\nimport React,{useEffect, useState} from \"react\";\n\nimport styled from 'styled-components';\n\nimport {ImBubble2} from 'react-icons/im';\nimport {AiOutlineRetweet} from 'react-icons/ai';\nimport {FaRegHeart} from 'react-icons/fa';\nimport {BiUpload} from 'react-icons/bi'\n\nimport LikeButton from './LikeButton/index'\n\nconst TweetHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Name = styled.b`\n    font-size: 25px;\n    margin-left: 15px;\n    margin-right: 10px;\n`;\nconst Span = styled.span`\n    margin-left: 85px;\n    font-size: 30px;\n    display: block;\n`;\n\nconst MyPhoto = styled.img`\n  margin-top: 10px;\n  border-radius: 35px;\n  margin-left: 65px;\n  width: 1000px;\n  height: auto;\n`;\n\nconst Avatar = styled.img`\n  height: 75px;\n  width: 75px;\n  border-radius: 50%;\n`;\nconst TweetLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 80px;\n`;\n\nconst ButtonBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-left: 85px;\n  margin-top: 15px;\n  margin-right: 65px;\n\n`;\n\nconst Info = styled.span`\n  color: grey;\n`;\n\nconst Retmeowed = styled.span`\n  color: grey;\n  margin-left: 85px;\n`;\nconst postLikeOrUnliked = async (tweetID, isItOrNot) =>{\n  fetch(`api/tweet/${tweetID}/like`, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n    body: JSON.stringify({like: isItOrNot})\n    })\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n}\nconst Tweet = (props) => {\n  const {displayName,\n             handle,\n              date, \n              avatar, \n              photo, \n              message, \n              remowed,\n              id,\n              likedOrNot} = props\n    const [isLiked, setIsLiked] = useState(likedOrNot)\n    const toggleLikeBtn = () =>{\n      setIsLiked(!isLiked)\n      postLikeOrUnliked(id, !isLiked)\n    }\n    \n  return (\n  <div style={{border:'1px solid lightgray', padding: '30px 0px 40px 5px'}} >\n    {remowed && <Retmeowed><AiOutlineRetweet/>{`${remowed} remowed`}</Retmeowed>}\n    <TweetHeader>\n      <Avatar src={avatar}/>\n    <span><Name>{displayName}</Name><Info>{`${handle} - ${date}`}</Info></span>\n  </TweetHeader>\n  <div >\n  <Span>{message}</Span>\n   {photo && <MyPhoto src={photo} />}\n    <ButtonBar>\n      <ImBubble2 size='30px'/>\n      <AiOutlineRetweet size='30px'/>\n      <div onClick={toggleLikeBtn}>\n        <LikeButton isLiked={isLiked} />\n      </div>\n      <BiUpload size='30px'/>\n    </ButtonBar>\n    </div>\n    \n  </div>\n\n);\n  };\n\nexport default Tweet;","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/TweetDetails.js",[],["154","155"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/TwitterClone.js",[],["156","157"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Profile.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/LikeButton/Heart.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/components/Notifications.js",[],["158","159"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/components/Main.js",["160"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/utils.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"\nconst randoms = [...Array(9)].map(() => (Math.floor(Math.random() * 9) + 1));\nconsole.log(\n    randoms\n)\n\nconsole.log([...Array(9).keys()].sort(function() { return 0.5 - Math.random() }))\n\nconst blankGrid = Array(9).fill(Array(9).fill(0))\n// check if the grid is full, change the '!==' for '==='\nconst checkGrid = (grid) =>{\n    for(let r = 0; r < 9; r++){\n        for(let c = 0; c < 9; c++ ){\n            if(grid[r][c] !== 0){\n                return false\n            }\n        }\n    }\n    return true\n}\n\nconsole.log(\n    checkGrid(blankGrid)\n)\n\nexport function range(start, stop, step = 1, circularFill = false, map = (value) => value) {\n\tif (typeof stop === 'undefined') {\n\t\tstop = start;\n\t\tstart = 0;\n\t}\n\n\tif (step > 0 && start >= stop) {\n\t\tstep = -step;\n\t}\n\n\tif (step < 0 && start <= stop) {\n\t\treturn [];\n\t}\n\t\n\tlet index = start;\n\tconst result = [];\n\t\n\tif (circularFill) {\n\t\tconst size = start + stop;\n\t\tfor (index; step > 0 ? index < size : index > size; index += step) {\n\t\t\tresult.push(map(index % stop));\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tfor (index; step > 0 ? index < stop : index > stop; index += step) {\n\t\tresult.push(map(index));\n\t}\n\n\treturn result;\n}\n\nexport function listToMatrix(list, elementsPerSubArray) {\n    var matrix = [], i, k;\n\n    for (i = 0, k = -1; i < list.length; i++) {\n        if (i % elementsPerSubArray === 0) {\n            k++;\n            matrix[k] = [];\n        }\n\n        matrix[k].push(list[i]);\n    }\n\n    return matrix;\n}\n\n\n// we start with an empty sudoku...\nvar sudoku1 = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\nvar sudoku2 = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\n// ... and we solve it!!\nconsole.log( solve(sudoku1)  )\n\nexport function getSudoku(){\n\tlet sudoku = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);\n\t\n\treturn listToMatrix(solve(sudoku), 9)\n\t\n}\n\nconst randomInRange = (min,max) => { return Math.floor(Math.random() * (max - min + 1) + min) };\n\nexport function flatten(matrix){\n\tconst flatArr = [];\n\tmatrix.map((row) =>{\n\t\trow.map((item) =>{\n\t\t\tflatArr.push(item)\n\t\t})\n\t})\n\treturn flatArr\n}\n\nconsole.log(flatten(getSudoku()))\n\n// test solve function\nfunction testSolve(){\n\tconst baseSodu = getSudoku()\n\tconst hideMe = listOfIndicesToHide(1)\n\tconsole.log(hideMe)\n\tconst zero = [[0,0],[0,1],[1,0],[3,6]]\n\tconst [r,c] = zero[3]\n\tconst mysodu = [...baseSodu]\n\tbaseSodu.map((row, rowIndex) =>{\n\t\t row.map((col, colIndex) =>{\n\t\t\tif(zero.some(arr => arraysMatch(arr, [rowIndex, colIndex]))){\n\t\t\t\tmysodu[rowIndex][colIndex] = 0\n\t\t\t}\n\t\t})\n\t})\n\tconsole.log(\n\t\tlistToMatrix( solve(flatten(baseSodu)), 9)[r][c]\n\t\t)\n\tconsole.log(\n\t\tlistToMatrix(solve(flatten(mysodu)),9)[r][c]\n\t)\n\t//console.log(arraysMatch(solve(flatten(mysodu)),flatten(baseSodu)))\n\t\n}\ntestSolve()\n\n\n\n\n\n\nconsole.log(randomInRange(5,30))\n\nexport function listOfIndicesToHide(howMany){\n\tlet indices = []\n\tlet row\n\tlet col\n\t\n\twhile(true){\n\t\trow = randomInRange(0,8)\n\t\tcol = randomInRange(0,8)\n\n\t\tif(!indices.some(arr => arraysMatch(arr, [row,col]))){\n\t\t\tindices.push([row,col])\n\t\t}\n\n\t\tif(indices.length >= howMany){\n\t\t\treturn indices\n\t\t}\n\t}\n\t\n}\nconsole.log(\n\tlistOfIndicesToHide(2)\n\t)\n\n\n\nconsole.log(\n\tarraysMatch([1,2,4],[1,2,4])\n)\n//HACKING\nexport function getGame(nMissing){\n\tconst hideElems = listOfIndicesToHide(nMissing)\n\n\treturn getSudoku().map((row, rowIndex) =>{\n\t\treturn row.map((item, colIndex) =>{\n\t\t\tif(hideElems.some(arr => arraysMatch(arr, [rowIndex, colIndex]))){\n\t\t\t\treturn {val: 0, row: rowIndex, col: colIndex, answer: item, canChange: true}\n\t\t\t} else{\n\t\t\t\treturn {val: item, row: rowIndex, col: colIndex, answer: item, canChange: false}\n\t\t\t}\n\t\t})\n\t})\n\t\n}\n\nconsole.log(\n\tsolve(flatten(getGame(40)).map(elem => elem.val)).every(elem => elem !== 0)\n)\n\nconsole.log( getGame(1))\n\n\nexport function arraysMatch(arr1, arr2) {\n\n\t// Check if the arrays are the same length\n\tif (arr1.length !== arr2.length) return false;\n\n\t// Check if all items exist and are in the same order\n\tfor (var i = 0; i < arr1.length; i++) {\n\t\tif (arr1[i] !== arr2[i]) return false;\n\t}\n\n\t// Otherwise, return true\n\treturn true;\n\n};\n\nconsole.log(getSudoku())\n\n// given a sudoku cell, returns the row\nfunction returnRow(cell) {\n\treturn Math.floor(cell / 9);\n}\n\n// given a sudoku cell, returns the column\nfunction returnCol(cell) {\n\treturn cell % 9;\n}\n\n// giveπn a sudoku cell, returns the 3x3 block\nexport function returnBlock(cell) {\n\treturn Math.floor(returnRow(cell) / 3) * 3 + Math.floor(returnCol(cell) / 3);\n}\n\nconsole.log(\n\treturnBlock(29)\n)\n\n// given a number, a row and a sudoku, returns true if the number can be placed in the row\nfunction isPossibleRow(number,row,sudoku) {\n\tfor (var i=0; i<=8; i++) {\n\t\tif (sudoku[row*9+i] == number) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// given a number, a column and a sudoku, returns true if the number can be placed in the column\nfunction isPossibleCol(number,col,sudoku) {\n\tfor (var i=0; i<=8; i++) {\n\t\tif (sudoku[col+9*i] == number) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// given a number, a 3x3 block and a sudoku, returns true if the number can be placed in the block\nfunction isPossibleBlock(number,block,sudoku) {\n\tfor (var i=0; i<=8; i++) {\n\t\tif (sudoku[Math.floor(block/3)*27+i%3+9*Math.floor(i/3)+3*(block%3)] == number) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// given a cell, a number and a sudoku, returns true if the number can be placed in the cell\nfunction isPossibleNumber(cell,number,sudoku) {\n\tvar row = returnRow(cell);\n\tvar col = returnCol(cell);\n\tvar block = returnBlock(cell);\n\treturn isPossibleRow(number,row,sudoku) && isPossibleCol(number,col,sudoku) && isPossibleBlock(number,block,sudoku);\n}\n\n// given a row and a sudoku, returns true if it's a legal row\nfunction isCorrectRow(row,sudoku) {\n\tvar rightSequence = new Array(1,2,3,4,5,6,7,8,9);\n\tvar rowTemp= new Array();\n\tfor (var i=0; i<=8; i++) {\n\t\trowTemp[i] = sudoku[row*9+i];\n\t}\n\trowTemp.sort();\n\treturn rowTemp.join() == rightSequence.join();\n}\n\n// given a column and a sudoku, returns true if it's a legal column\nfunction isCorrectCol(col,sudoku) {\n\tvar rightSequence = new Array(1,2,3,4,5,6,7,8,9);\n\tvar colTemp= new Array();\n\tfor (var i=0; i<=8; i++) {\n\t\tcolTemp[i] = sudoku[col+i*9];\n\t}\n\tcolTemp.sort();\n\treturn colTemp.join() == rightSequence.join();\n}\n\n// given a 3x3 block and a sudoku, returns true if it's a legal block \nfunction isCorrectBlock(block,sudoku) {\n\tvar rightSequence = new Array(1,2,3,4,5,6,7,8,9);\n\tvar blockTemp= new Array();\n\tfor (var i=0; i<=8; i++) {\n\t\tblockTemp[i] = sudoku[Math.floor(block/3)*27+i%3+9*Math.floor(i/3)+3*(block%3)];\n\t}\n\tblockTemp.sort();\n\treturn blockTemp.join() == rightSequence.join();\n}\n\n// given a sudoku, returns true if the sudoku is solved\nexport function isSolvedSudoku(sudoku) {\n\tfor (var i=0; i<=8; i++) {\n\t\tif (!isCorrectBlock(i,sudoku) || !isCorrectRow(i,sudoku) || !isCorrectCol(i,sudoku)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n// given a cell and a sudoku, returns an array with all possible values we can write in the cell\nfunction determinePossibleValues(cell,sudoku) {\n\tvar possible = new Array();\n\tfor (var i=1; i<=9; i++) {\n\t\tif (isPossibleNumber(cell,i,sudoku)) {\n\t\t\tpossible.unshift(i);\n\t\t}\n\t}\n\treturn possible;\n}\n\n// given an array of possible values assignable to a cell, returns a random value picked from the array\nfunction determineRandomPossibleValue(possible,cell) {\n\tvar randomPicked = Math.floor(Math.random() * possible[cell].length);\n\treturn possible[cell][randomPicked];\n}\n\n// given a sudoku, returns a two dimension array with all possible values \nfunction scanSudokuForUnique(sudoku) {\n\tvar possible = new Array();\n\tfor (var i=0; i<=80; i++) {\n\t\tif (sudoku[i] == 0) {\n\t\t\tpossible[i] = new Array();\n\t\t\tpossible[i] = determinePossibleValues(i,sudoku);\n\t\t\tif (possible[i].length==0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn possible;\n}\n\n// given an array and a number, removes the number from the array\nfunction removeAttempt(attemptArray,number) {\n\tvar newArray = new Array();\n\tfor (var i=0; i<attemptArray.length; i++) {\n\t\tif (attemptArray[i] != number) {\n\t\t\tnewArray.unshift(attemptArray[i]);\n\t\t}\n\t}\n\treturn newArray;\n}\n\n// given a two dimension array of possible values, returns the index of a cell where there are the less possible numbers to choose from\nfunction nextRandom(possible) {\n\tvar max = 9;\n\tvar minChoices = 0;\n\tfor (var i=0; i<=80; i++) {\n\t\tif (possible[i]!=undefined) {\n\t\t\tif ((possible[i].length<=max) && (possible[i].length>0)) {\n\t\t\t\tmax = possible[i].length;\n\t\t\t\tminChoices = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn minChoices;\n}\n\n// given a sudoku, solves it\nfunction solve(sudoku) {\n\tvar saved = new Array();\n\tvar savedSudoku = new Array();\n\tvar i=0;\n\tvar nextMove;\n\tvar whatToTry;\n\tvar attempt;\n\twhile (!isSolvedSudoku(sudoku)) {\n\t\ti++;\n\t\tnextMove = scanSudokuForUnique(sudoku);\n\t\tif (nextMove == false) {\n\t\t\tnextMove = saved.pop();\n\t\t\tsudoku = savedSudoku.pop();\n\t\t}\n\t\twhatToTry = nextRandom(nextMove);\n\t\tattempt = determineRandomPossibleValue(nextMove,whatToTry);\n\t\tif (nextMove[whatToTry].length>1) {\n\t\t\tnextMove[whatToTry] = removeAttempt(nextMove[whatToTry],attempt);\n\t\t\tsaved.push(nextMove.slice());\n\t\t\tsavedSudoku.push(sudoku.slice());\n\t\t}\n\t\tsudoku[whatToTry] = attempt;\n\t}\n\t//return showSudoku(sudoku,i);\n\treturn sudoku\n}\n\n\n// given a solved sudoku and the number of steps, prints out the sudoku\nfunction showSudoku(sudoku,i) {\n\tvar sudokuText = \"\";\n\tvar solved = \"\\n\\nSolved in \"+i+\" steps\";\n\tfor (var i=0; i<=8; i++) {\n\t\tfor (var j=0; j<=8; j++) {\n\t\t\tsudokuText+=\" \";\n\t\t\tsudokuText+=sudoku[i*9+j];\n\t\t\tsudokuText+=\" \";\n\t\t\tif (j!=8) {\n\t\t\t\tsudokuText+=\"|\";\n\t\t\t}\n\t\t}\n\t\tif (i!=8) {\n\t\t\tsudokuText+=\"\\n---+---+---+---+---+---+---+---+---\\n\";\n\t\t}\n\t}\n\tsudokuText+=solved;\n\treturn sudokuText\n}\n","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Sudoku.tsx",[],["198","199"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/App.js",["200"],"import React, {useContext} from \"react\";\nimport styled from 'styled-components';\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Bookmarks from './components/Bookmarks';\nimport Notifications from './components/Notifications';\nimport HomeFeed from './components/HomeFeed';\nimport Profile from './components/Profile'\nimport TweetDetails from './components/TweetDetails';\n\nimport {CurrentUserContext} from './components/CurrentUserContext';\n\n\nconst Layout = styled.div`\n  display: flex;\n  \n`;\n\nconst App = () => {\n  let { path, url } = useRouteMatch();\n  const {status} = useContext(CurrentUserContext);\n  const isLoading = status === 'idle';\n  return (\n    <>\n    { isLoading ? (\n  <Layout>\n    \n      <Sidebar/>\n      <Switch>\n      <Route exact  path={path}>\n                <HomeFeed/>\n            </Route>\n            <Route path={`${path}/notifications`}>\n                <Notifications />\n            </Route>\n            <Route path={`${path}/bookmarks`}>\n                <Bookmarks />\n            </Route>\n            <Route path={`${path}/tweet/:tweetId`}>\n                <TweetDetails />\n            </Route>\n            <Route path={`${path}/:profileId`}>\n                <Profile />\n            </Route>\n      </Switch>\n   \n  </Layout>\n    ) : (\n      <div style={{\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>Loading</div>\n    )\n}\n</>\n  )\n  \n};\n\nexport default App;\n","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Grid.tsx",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/react-sudoku/src/components/Timer.tsx",["201","202"],"import React,{useEffect, useState} from 'react'\nimport styled from 'styled-components';\n\ninterface TimerProp{\n    isActive: boolean,\n    second: string, setSecond: React.Dispatch<React.SetStateAction<string>>,\n    minute: string, setMinute: React.Dispatch<React.SetStateAction<string>>,\n    counter: number, setCounter: React.Dispatch<React.SetStateAction<number>>\n    timerMsg: string\n}\n\nfunction Timer(props: TimerProp) {\n    const {isActive, second, setSecond, minute, setMinute, counter, setCounter, timerMsg} = props\n\n    useEffect(() => {\n        let intervalId: number\n    \n        if (isActive) {\n             intervalId = window.setInterval(() => {\n            const secondCounter = counter % 60;\n            const minuteCounter = Math.floor(counter / 60);\n    \n            const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: `${secondCounter}`;\n            const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: `${minuteCounter}`;\n    \n            setSecond(computedSecond);\n            setMinute(computedMinute);\n    \n            setCounter(counter => counter + 1);\n          }, 1000)\n        }\n    \n        return () => clearInterval(intervalId);\n      }, [isActive, counter])\n\n      const setTimerBarMsg = (barState:string) =>{\n        switch (barState) {\n          case 'Playing':\n            return (\n              <>\n                <span className={'minutes'}>{minute}</span>\n                <span>:</span>\n                <span className={'seconds'}>{second}</span>\n              </>\n            )\n          case 'Won':\n            return <span>Congratulation!</span>\n\n          case 'Lost':\n            return <span>Nice try!</span>\n        \n          default:\n            break;\n        }\n\n      }\n\n    return (\n        <Container>\n            <Time>\n            {setTimerBarMsg(timerMsg)}\n            </Time>\n        </Container>\n    )\n}\n\nexport default Timer\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  display: grid;\n  place-items: center;\n  margin-top: 20px;\n  background: rgb(66,4,53);\n  background: linear-gradient(90deg, rgba(66,4,53,1) 0%, rgba(81,22,111,1) 35%, rgba(12,29,84,1) 100%);\n  padding: 10px 10px;\n  border-radius: 10px;\n  height: 50px;\n  margin-bottom: 20px;\n`;\n\nconst Time = styled.div`\n    font-size: 40px;\n  margin-bottom: 1rem;\n  color: white;\n`;\n",["203","204"],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/MyTable.tsx",["205","206"],"import React, { useState, useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuidv4 } from 'uuid';\nimport {GlobalContext} from './GlobalContext'\n\n\ntype Row = {\n    id: number, color: string,  clickedDays: string[], name:string\n}\n\n\nconst MyTable:React.FC = () => {\n    const colors = ['salmon','fuchsia', 'lightblue', 'green','tomato', 'purple','blue'];\n    const {rows, setRows} = useContext(GlobalContext)\n    \n\n\n    \n    const handleColor = (id: number, value: string) =>{\n        if(rows && setRows){\n            const idx = rows.findIndex(r => r.id  === id)\n            const newElem = {...rows[idx], color: value}\n            const nextRowsArr:Row[] = [...rows]\n            nextRowsArr.splice(idx, 1, newElem)\n            setRows(nextRowsArr)\n        }\n    }\n    const addRow = () =>{\n       if(rows && setRows) {\n        const newRow = {id: rows.length, color: 'salmon', clickedDays:[], name:''}\n        const nextArr:Row[] = [...rows];\n        nextArr.push(newRow)\n        setRows(nextArr)}\n    }\n\n    const genColors = (id: number) =>{\n\n    const ColorBtns = colors.map((color) => {\n        \n        return <Color key={uuidv4()} color={color} onClick={() => handleColor(id, color)}/>\n    })\n        return ColorBtns\n    }\n    const deleteRow = (id: number) =>{\n        if(rows && setRows){\n        const idx = rows.findIndex(r => r.id === id)\n        const nextArr:Row[] = [...rows];\n        nextArr.splice(idx, 1)\n        setRows(nextArr)}\n    } \n    const handleInputOnChange = (id: number, content: string) =>{\n        if(rows && setRows){\n        const idx = rows.findIndex(r => r.id === id)\n        const nextArr:Row[] = [...rows];\n        const tempItem = rows[id];\n        const newItem = {...tempItem, name:content}\n        nextArr.splice(idx, 1, newItem)\n        setRows(nextArr)\n        // handleInputOnChange(rowData.id, ev)\n        //value={`${rowData.name}`}\n        }\n    }   \n\n    const rowList = rows?.map((rowData) => {\n     \n        return (\n            <tr key={rowData.id}>\n                <td >\n                    <Input \n                        type=\"text\" \n                        color={ `${rowData.color}`}\n                        value={rowData.name}\n                        placeholder={'please enter goal'}\n                        onChange={(ev) => handleInputOnChange(rowData.id, ev.target.value)}/>\n                </td>\n                <td>{genColors(rowData.id)}</td>\n                <td><button \n                    style={{height:'40px', width:'40px', marginLeft:'5px', border:'none'}}\n                    onClick={() => deleteRow(rowData.id)}>X</button></td>\n            </tr>\n            \n        )\n    })\n    \n    return (\n        <Wrapper>\n            <div>\n              \n                <AddBtn onClick={() => addRow()}>Add Chain</AddBtn>\n            </div>\n            <table >\n                <thead>\n                    <tr>\n                        <th>Name (click to edit)</th>\n                        <th>Background Color</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                        {rowList}\n                    \n                </tbody>\n\n            </table>\n           \n        </Wrapper>\n    )\n}\n\nexport default MyTable\n\nconst Wrapper = styled.div`\n    margin-top:100px;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst shadow = 'box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);-webkit-box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);-moz-box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);'\n\n\nconst AddBtn = styled.button`\n    margin-bottom: 40px;\n    width: 100px;\n    height: 30px;\n    font-size: 15px;\n    border: none;\n    &:hover{\n        box-shadow: ${shadow}\n    }\n\n`;\n\nconst Input = styled.input`\n    background-color: ${props => props.color};\n    height: 40px;\n    width: 200px;\n    border: none;\n    border-radius: 3px;\n    font-size: 25px;\n`;\n\n\n\nconst Color = styled.button<{color:string}>`\n    background-color: ${props => props.color};\n    width:40px;\n    height:40px;\n    border:none;\n    margin-right: 5px;\n    border-radius: 3px;\n    margin-left: 5px;\n    &:hover{\n        box-shadow: ${shadow}\n    }\n`;\n\n","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/Main.tsx",["207"],"import React,{useState, useContext} from 'react'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css';\nimport styled from 'styled-components'\nimport './app.css'\nimport {GlobalContext} from './GlobalContext'\nimport {useMorph} from 'react-morph';\nimport ChainsAdmin from './ChainsAdmin'\n\n\ntype TileClass = {\n    activeStartDate: Date,\n    date: Date,\n    view: string\n}\n\ntype Row = {\n    id: number, color: string,  clickedDays: string[], name:string\n}\n\n\nconst Main:React.FC = () => {\n    const {rows, setRows} = useContext(GlobalContext)\n    const [toggle, setToggle] = useState<boolean>(true);\n    const [clickedDays, setClickedDays] = useState<string[]>([])\n    const [current, setCurrent] = useState<number>(0)\n    const morph = useMorph();\n\n  \n    const addDate = (value:Date) =>{\n        const myDate = String(value)\n       \n       if(!clickedDays.includes(myDate)){\n       setClickedDays([...clickedDays, myDate])\n        } else {\n           const nextArr = [...clickedDays];\n           const idx = clickedDays.indexOf(myDate);\n           nextArr.splice(idx, 1)\n           setClickedDays([...nextArr])\n        }\n    }\n\n\n\n    const addGlobalDate = (dateObj: Date) =>{\n        const myDate = String(dateObj)\n        if(rows && setRows){\n            const {id, color, clickedDays, name} = rows[current]\n            const newClickedDays = [...clickedDays, myDate]\n            const idx = rows.findIndex(r => r.id === current)\n            const nextArr:Row[] = [...rows];\n            const newRow:Row = {id, color, clickedDays: newClickedDays, name}\n            nextArr.splice(idx, 1, newRow)\n            setRows(nextArr)\n\n        }\n    }\n\n    const setCurrentHabit = (_id: number) => {\n        if(rows){\n            setCurrent(_id)\n        }\n\n    }\n   \n    const applyClass = ({ activeStartDate, date, view }: TileClass) => {\n       \n        if(rows && rows[current].clickedDays.includes(String(date))){\n            return ['tileSize',rows[current].color]\n        }\n        return 'tileSize'\n    }\n    \n\n    const habitList = rows?.map((habit) =>\n        <Habit key={habit.id} \n               onClick={() => setCurrentHabit(habit.id)} \n               color={habit.color}\n               isSelected={habit.id === current}\n               >\n            {habit.name}\n        </Habit>\n        );\n    return (\n        <div>\n             <button onClick={() => setToggle(!toggle)}>{toggle ? 'Mange Habits' : 'Start marking'}</button>\n                <br />\n                {toggle ? (\n                        <Wrapper {...morph} >\n                            <Tomato>{habitList}</Tomato>\n                            <Calendar \n                                className={'sizeAndBorder'}\n                                tileClassName={applyClass}\n                                onClickDay={addGlobalDate} \n                            />\n                        </Wrapper>\n                    ) : (\n                        // <h1 {...morph}  >Michael Matos</h1>\n                        <span {...morph}><ChainsAdmin /></span>\n                    )}\n            \n        </div>\n    )\n}\n\nexport default Main\n\nconst Wrapper = styled.div`\n    display:flex;\n`;\n\nconst Tomato = styled.div`\n    width: 200px;\n    margin-right: 50px;\n   \n    margin-top: 25px;\n`;\n\ninterface isSelected{\n    isSelected: boolean\n}\nconst shadow = 'box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);-webkit-box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);-moz-box-shadow: 10px 10px 0px 0px rgba(0,0,0,1);'\nconst Habit = styled.div`\n    background-color:${props => props.color};\n    padding:10px;\n    font-weight: 900;\n    margin-bottom: 15px;\n    border-radius: 7px;\n    position: ${(props:isSelected) => props.isSelected ? 'relative': ''};\n    top: ${(props:isSelected) => props.isSelected ? '-5px': ''};\n    box-shadow: ${(props:isSelected) => props.isSelected ? shadow: ''};\n    &:hover{\n        box-shadow: ${shadow};\n        position: relative;\n        top: -5px;\n        }\n`;\n","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/GlobalContext.tsx",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/KittyGame/NyanCatsGame.js",["208"],"import React,{useEffect} from 'react'\nimport styled from 'styled-components'\n\nfunction NyanCatsGame() {\n    useEffect(() =>{\n        window.scrollTo(0, 0)\n        document.body.style.overflow = \"hidden\"\n        return () => {\n            document.body.style.overflow = \"scroll\"\n          }\n    },[])\n\n    return (\n    <Wrapper>\n        <iframe \n        width='100%'\n        height='100%'\n        frameBorder=\"0\"\n        src=\"http://localhost:31415/nyan.html\"\n        /> \n    </Wrapper>\n    )\n    \n}\n\nexport default NyanCatsGame\n\nconst Wrapper = styled.div`\n    height:100vh;\n    width:100vw;\n`;\n","/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/ChainsAdmin.tsx",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/TwitterClone/src/constants.js",[],"/Users/michaelmatos/Desktop/concordia_bootcamp/portfolio/clients/src/apps/DBTC/src/components/App.jsx",["209","210"],{"ruleId":"211","severity":1,"message":"212","line":4,"column":22,"nodeType":"213","messageId":"214","endLine":4,"endColumn":28},{"ruleId":"211","severity":1,"message":"215","line":5,"column":5,"nodeType":"213","messageId":"214","endLine":5,"endColumn":9},{"ruleId":"211","severity":1,"message":"216","line":17,"column":29,"nodeType":"213","messageId":"214","endLine":17,"endColumn":34},{"ruleId":"211","severity":1,"message":"217","line":54,"column":9,"nodeType":"213","messageId":"214","endLine":54,"endColumn":13},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":49,"column":6,"nodeType":"224","endLine":49,"endColumn":8,"suggestions":"225"},{"ruleId":"218","replacedBy":"226"},{"ruleId":"220","replacedBy":"227"},{"ruleId":"218","replacedBy":"228"},{"ruleId":"220","replacedBy":"229"},{"ruleId":"211","severity":1,"message":"230","line":1,"column":16,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"231","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":20},{"ruleId":"211","severity":1,"message":"232","line":18,"column":10,"nodeType":"213","messageId":"214","endLine":18,"endColumn":17},{"ruleId":"211","severity":1,"message":"233","line":44,"column":7,"nodeType":"213","messageId":"214","endLine":44,"endColumn":12},{"ruleId":"211","severity":1,"message":"234","line":2,"column":15,"nodeType":"213","messageId":"214","endLine":2,"endColumn":24},{"ruleId":"211","severity":1,"message":"235","line":8,"column":9,"nodeType":"213","messageId":"214","endLine":8,"endColumn":19},{"ruleId":"211","severity":1,"message":"236","line":42,"column":7,"nodeType":"213","messageId":"214","endLine":42,"endColumn":18},{"ruleId":"218","replacedBy":"237"},{"ruleId":"220","replacedBy":"238"},{"ruleId":"218","replacedBy":"239"},{"ruleId":"220","replacedBy":"240"},{"ruleId":"218","replacedBy":"241"},{"ruleId":"220","replacedBy":"242"},{"ruleId":"211","severity":1,"message":"243","line":137,"column":12,"nodeType":"213","messageId":"214","endLine":137,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":75,"column":15,"nodeType":"246","messageId":"247","endLine":75,"endColumn":187},{"ruleId":"211","severity":1,"message":"248","line":77,"column":5,"nodeType":"213","messageId":"214","endLine":77,"endColumn":12},{"ruleId":"244","severity":1,"message":"245","line":77,"column":15,"nodeType":"246","messageId":"247","endLine":77,"endColumn":187},{"ruleId":"244","severity":1,"message":"245","line":83,"column":15,"nodeType":"246","messageId":"247","endLine":83,"endColumn":187},{"ruleId":"249","severity":1,"message":"250","line":93,"column":19,"nodeType":"251","messageId":"252","endLine":93,"endColumn":21},{"ruleId":"249","severity":1,"message":"250","line":94,"column":18,"nodeType":"251","messageId":"252","endLine":94,"endColumn":20},{"ruleId":"249","severity":1,"message":"250","line":111,"column":31,"nodeType":"251","messageId":"252","endLine":111,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":112,"column":28,"nodeType":"251","messageId":"252","endLine":112,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":145,"column":20,"nodeType":"251","messageId":"255","endLine":145,"endColumn":54},{"ruleId":"256","severity":1,"message":"257","line":226,"column":23,"nodeType":"258","messageId":"259","endLine":226,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":236,"column":23,"nodeType":"258","messageId":"259","endLine":236,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":246,"column":72,"nodeType":"258","messageId":"259","endLine":246,"endColumn":74},{"ruleId":"244","severity":1,"message":"245","line":263,"column":22,"nodeType":"246","messageId":"247","endLine":263,"endColumn":50},{"ruleId":"244","severity":1,"message":"245","line":264,"column":15,"nodeType":"246","messageId":"247","endLine":264,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":269,"column":24,"nodeType":"258","messageId":"259","endLine":269,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":274,"column":22,"nodeType":"246","messageId":"247","endLine":274,"endColumn":50},{"ruleId":"244","severity":1,"message":"245","line":275,"column":15,"nodeType":"246","messageId":"247","endLine":275,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":280,"column":24,"nodeType":"258","messageId":"259","endLine":280,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":285,"column":22,"nodeType":"246","messageId":"247","endLine":285,"endColumn":50},{"ruleId":"244","severity":1,"message":"245","line":286,"column":17,"nodeType":"246","messageId":"247","endLine":286,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":291,"column":26,"nodeType":"258","messageId":"259","endLine":291,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":306,"column":17,"nodeType":"246","messageId":"247","endLine":306,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":323,"column":17,"nodeType":"246","messageId":"247","endLine":323,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":325,"column":17,"nodeType":"258","messageId":"259","endLine":325,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":326,"column":18,"nodeType":"246","messageId":"247","endLine":326,"endColumn":29},{"ruleId":"256","severity":1,"message":"257","line":328,"column":26,"nodeType":"258","messageId":"259","endLine":328,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":338,"column":17,"nodeType":"246","messageId":"247","endLine":338,"endColumn":28},{"ruleId":"256","severity":1,"message":"260","line":340,"column":23,"nodeType":"258","messageId":"259","endLine":340,"endColumn":25},{"ruleId":"256","severity":1,"message":"260","line":352,"column":18,"nodeType":"258","messageId":"259","endLine":352,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":364,"column":14,"nodeType":"246","messageId":"247","endLine":364,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":365,"column":20,"nodeType":"246","messageId":"247","endLine":365,"endColumn":31},{"ruleId":"211","severity":1,"message":"261","line":371,"column":3,"nodeType":"213","messageId":"214","endLine":371,"endColumn":4},{"ruleId":"256","severity":1,"message":"257","line":373,"column":16,"nodeType":"258","messageId":"259","endLine":373,"endColumn":18},{"ruleId":"211","severity":1,"message":"262","line":392,"column":10,"nodeType":"213","messageId":"214","endLine":392,"endColumn":20},{"ruleId":"263","severity":1,"message":"264","line":395,"column":11,"nodeType":"213","messageId":"265","endLine":395,"endColumn":12},{"ruleId":"256","severity":1,"message":"260","line":400,"column":9,"nodeType":"258","messageId":"259","endLine":400,"endColumn":11},{"ruleId":"256","severity":1,"message":"260","line":404,"column":8,"nodeType":"258","messageId":"259","endLine":404,"endColumn":10},{"ruleId":"218","replacedBy":"226"},{"ruleId":"220","replacedBy":"227"},{"ruleId":"211","severity":1,"message":"266","line":20,"column":15,"nodeType":"213","messageId":"214","endLine":20,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":1,"column":26,"nodeType":"213","messageId":"214","endLine":1,"endColumn":34},{"ruleId":"222","severity":1,"message":"269","line":34,"column":10,"nodeType":"224","endLine":34,"endColumn":29,"suggestions":"270"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"267","severity":1,"message":"268","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"267","severity":1,"message":"234","line":1,"column":39,"nodeType":"213","messageId":"214","endLine":1,"endColumn":48},{"ruleId":"267","severity":1,"message":"271","line":30,"column":11,"nodeType":"213","messageId":"214","endLine":30,"endColumn":18},{"ruleId":"272","severity":1,"message":"273","line":15,"column":9,"nodeType":"274","endLine":20,"endColumn":11},{"ruleId":"211","severity":1,"message":"230","line":1,"column":15,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"275","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Tweet' is defined but never used.","'path' is assigned a value but never used.","no-native-reassign",["276"],"no-negated-in-lhs",["277"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.","ArrayExpression",["278"],["276"],["277"],["276"],["277"],"'useContext' is defined but never used.","'TwitterClone' is defined but never used.","'profile' is assigned a value but never used.","'ranId' is assigned a value but never used.","'useEffect' is defined but never used.","'FaRegHeart' is defined but never used.","'TweetLayout' is assigned a value but never used.",["276"],["277"],["276"],["277"],["276"],["277"],"'About' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'sudoku2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'row', 'col'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'i' is assigned a value but never used.","'showSudoku' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'url' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setCounter', 'setMinute', and 'setSecond'. Either include them or remove the dependency array.",["279"],"'addDate' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ChainsAdmin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [content]",{"range":"284","text":"285"},"Update the dependencies array to be: [isActive, counter, setSecond, setMinute, setCounter]",{"range":"286","text":"287"},[987,989],"[content]",[1224,1243],"[isActive, counter, setSecond, setMinute, setCounter]"]